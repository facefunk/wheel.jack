#!/usr/bin/env bash

. panic
. args
. util

# MAX_SIZE is the maximum file size to encode videos to.
MAX_SIZE=32000000000 # 4GB in bits
# MAX_BIT_RATE is the maximum total target bitrate, audio and video combined, to encode videos to.
MAX_BITRATE=10000000
# A_MAX_BITRATE is the maximum audio bitrate to encode video audio to.
A_MAX_BITRATE=128000
# V_BUFFER_SECONDS is the buffer size to use when calculating bitrate.
# Lower = more accurate output bitrate, lower chance of player buffering.
# higher = more efficient compression, lower chance of blocky frames.
# 2 seconds is a usual happy medium.
V_BUFFER_SECONDS=2

if [[ $(type -t usage) != function ]]; then
    usage() {
        panic "Usage:\n encode [options] <inputFile> <outputFile> <title> [FFmpeg options]\n\n" \
            "Options:\n --force\tforce encoding"
    }
fi
parseArgs 3 "$@"

IFS=$'\t' read -r subInputs subMaps < <(./subs "$inputFile")
command="< /dev/null ffmpeg -hide_banner -y -i \"$(escape "$inputFile")\"$subInputs"

# Order of vars determined by ffprobe.
# level returned without . so 4.1 = 41, 5.0 = 50
IFS=$',' read -r vCodec vWidth vPixFmt vLevel vBitrate < <(probe v:0 stream=codec_name,level,bit_rate,pix_fmt,width)
vDuration=$(probe v:0 format=duration)
IFS=$',' read -r aCodec aChannels aBitrate < <(probe a:0 stream=codec_name,channels,bit_rate)

notNumeric "$aBitrate" && aBitrate=$(scan a)
if notNumeric "$aBitrate" || [[ $aBitrate -gt $A_MAX_BITRATE ]]
then
    aBitrate=$A_MAX_BITRATE
    aEncode=1
fi

if [[ -n $aEncode || -n $forceEncode || "$aCodec" != "aac" || $aChannels -gt 2 || $aBitrate -gt $A_MAX_BITRATE ]]
then
    command+=" -acodec aac -ab $aBitrate -ac 2"
else
    command+=" -acodec copy"
fi

vMaxBitrate=$(floor "$MAX_SIZE / $vDuration - $aBitrate")
vRemBitrate=$(floor "$MAX_BITRATE - $aBitrate")
[[ $vMaxBitrate -gt $vRemBitrate ]] && vMaxBitrate=$vRemBitrate

notNumeric "$vBitrate" && vBitrate=$(scan v)
if notNumeric "$vBitrate" || [[ $vBitrate -gt $vMaxBitrate ]]
then
    vBitrate=$vMaxBitrate
    vEncode=1
fi

if [[ -n $vEncode || -n $forceEncode || "$vCodec" != "h264" || "$vLevel" = "5" || "$vLevel" = "51" || \
    "$vPixFmt" != "yuv420p" || $vWidth -gt 1920 ]]
then
    maxRate=$(floor "$vBitrate + $aBitrate")
    command+=" -vcodec h264 -profile:v high -level 41 -pix_fmt yuv420p"
    command+=" -vb $vBitrate -maxrate $maxRate -bufsize $(floor "$V_BUFFER_SECONDS * $maxRate")"
    [[ $vWidth -gt 1920 ]] && command+=" -vf scale=1920:-1"
else
    command+=" -vcodec copy"
fi

[[ -n "$subMaps" ]] && command+=" -map 0:v:0 -map 0:a:0 -scodec mov_text$subMaps"
command+=" -metadata title=\"$(escape "$title")\" $ffArgs \"$(escape "$outputFile")\""

echo "$command"
echo
eval "$command"
