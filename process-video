#!/usr/bin/env bash

. panic
. config

[[ -d $DST ]] || panic "Not connected to $DST"

exec {uploads}<> <(true)
exec {encDone}<> <(true)
exec {uplDone}<> <(true)

encode() {
    while IFS= read -r -d $'\0' relName; do

        IFS=$'\t' read -r dirName newName title < <(./names "$relName")
        if [[ -z "$title" ]]; then
            echo "Couldn't get title"
            continue
        fi

        localName="$SRC/$relName"
        remoteDirName="$DST/$dirName"
        destName="$remoteDirName/$newName"
        if [[ -f "$destName" ]]; then
            echo "Remote file exists: $dirName/$newName"
            continue
        fi

        mkdir -p "$remoteDirName"
        echo "Encoding for remote file: $dirName/$newName"
        echo

        if ./encode "$newName" "$title" "$localName" "$1"; then
            echo -e "$newName\t$destName" >&$uploads
        else
            echo "Couldn't encode"
        fi
    done < <(find "$SRC" -type f -regextype posix-extended -regex '.*\.(mkv|avi|mp4|m4v)' -printf "%P\0" | sort -z)

    echo >&$encDone
}

upload() {
    didUp=0
    while true; do
        if read -t 0 <&$uploads; then
            didUp=1
            IFS=$'\t' read -r newName destName <&$uploads
            echo "Uploading: $destName"
            rsync -h --progress "$newName" "$destName" && rm "$newName"

        elif read -t 0 <&$encDone; then
            [[ $didUp -eq 1 ]] && echo "All files uploaded" || echo "Nothing to upload"
            echo >&$uplDone
            break
        else
            sleep 2
        fi
    done
}

out=()
buf=()
funs=()
init() {
    out+=(0)
    buf+=("")
    funs+=($1)
    exec {o}<&0
    out[$((${#out[@]}-1))]=$o
}

init "enc" < <(encode 2>&1 &)
init "upl" < <(upload 2>&1 &)

close() {
    for o in ${out[@]}; do
        exec {o}>&-
    done
}

finish() {
    exec {uploads}>&-
    exec {encDone}>&-
    exec {uplDone}>&-
    close
}
trap finish EXIT

merc() {
    finish
    kill -SIGSTOP -$$
}
trap merc SIGTSTP

setLine() {
    exec < /dev/tty
    oldstty=$(stty -g)
    stty raw -echo min 0
    echo -en "\033[6n" > /dev/tty
    IFS=';' read -r -d R row col
    stty $oldstty
    line=${row:2}
}
trap setLine WINCH
setLine

mode=0
len=${#out[@]}
for i in ${!out[@]}; do
    bufSpace+=$'\n'
done

while ! read -t 0 <&$uplDone; do
    for i in ${!out[@]}; do
        while read -N 1 -t 0.1 <&${out[$i]}; do
            case "$REPLY" in
                $'\n')
                    if [[ $mode -eq 1 ]]; then
                        mode=0
                        tput cup $line 0
                    fi
                    echo -e "${funs[$i]}: ${buf[$i]}\033[K"
                    buf[$i]=""
                    ;;
                $'\r')
                    if [[ $mode -eq 0 ]]; then
                        mode=1
                        echo -n "$bufSpace"
                        setLine
                        line=$((line-len))
                    fi
                    bline=$((line+i))
                    tput cup $bline 0
                    echo -ne "${funs[$i]}: ${buf[$i]}\033[K"
                    buf[$i]=""
                    ;;
                *)
                    buf[$i]+="$REPLY"
                    ;;
            esac
        done
    done
done
